/*
 * Author: Zhanliang Liu
 */

#include "number.en.grammar"

// for local grammars that come from regex tagger
<number> = <numeric> {nf.math.to_number($1)};

<sum> = <number> "plus" <number> {nf.math.sum($1,$3)}
      | <number> "added to" <number> {nf.math.sum($3, $1)}
      | "sum of" <number> "and" <number> {nf.math.sum($2,$4)}
      ;

<power> = <number> "raised to the power of" <number> {nf.math.pow($1,$2)}
        | <number> "raised to the exponent of" <number> {nf.math.pow($1,$2)}
        ;

<equ> = <number> "be equal to" <number> {vf.be.equ($1,$2)}
      | <number> "equal" <number> {vf.be.equ($1,$2)}
      | <number> "be" <number> {vf.be.equ($1,$2)}
      ;

<result> = <sum> {nf.I($1)} | <power> {nf.I($1)};
