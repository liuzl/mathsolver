/*
 * Author: Zhanliang Liu
 */

#include "number.zh.grammar"

// for local grammars that come from regex tagger
<number> = <numeric> {nf.math.to_number($1)};

<number> = <number> "打" {nf.math.mul($1, 12)};

<number> = <number> "加" <number>        {nf.math.sum($1,$3)}
         | <number> "加上" <number>      {nf.math.sum($1,$3)}
         | <number> "与" <number> "的和" {nf.math.sum($1,$3)}
         ;

<number> = <number> "减" <number>        {nf.math.sub($1,$3)}
         | <number> "减去" <number>      {nf.math.sub($1,$3)}
         | <number> "与" <number> "的差" {nf.math.sub($1,$3)}
         ;

<fraction> = <number> "分之" <number> {nf.math.div($3,$1)}
           ;

<number> = <number> "乘" <number>        {nf.math.mul($1,$3)}
         | <number> "乘以" <number>      {nf.math.mul($1,$3)}
         | <number> "与" <number> "的积" {nf.math.mul($1,$3)}
         | <number> "的" <number> "倍"   {nf.math.mul($1,$3)}
         | <number> "的一半"             {nf.math.mul($1,0.5)}
         | <number> "的" <fraction>      {nf.math.mul($1,$3)}
         ;

<number> = <number> "除" <number>   {nf.math.div($3,$1)}
         | <number> "除以" <number> {nf.math.div($1,$3)}
         | <fraction>               {nf.I($1)}
         ;

<number> = <number> "的" <number> "次方" {nf.math.pow($1,$3)}
         | <number> "的" <number> "次幂" {nf.math.pow($1,$3)}
         | <number> "的平方"   {nf.math.pow($1,2)}
         | <number> "的立方"   {nf.math.pow($1,3)}
         | <number> "的平方根" {nf.math.pow($1,0.5)}
         | <number> "的立方根" {nf.math.pow($1,nf.math.div(1,3))}
         ;

